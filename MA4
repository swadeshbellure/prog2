import math 
import matplotlib.pyplot as plt
import random

r = 1
n = int(input("no of points: "))  # the int to take a only the interger values 
count = 0 #no of time its insde the circle

def calculatedist(x,y):         # cal the distance form center and point 
    return math.sqrt(x**2+y**2)

points_red_x = []
points_red_y = []

points_blue_x = []
points_blue_y = []


for i in range(n):
    point_x = random.uniform(-r,r)
    point_y = random.uniform(-r,r)
    
    if calculatedist(point_x,point_y)<1:
        count +=1
        points_red_x.append(point_x)
        points_red_y.append(point_y)
    else:
        points_blue_x.append(point_x)
        points_blue_y.append(point_y)

calculated_pi = (count/n)*4

print(math.pi)
print(f"Calculated value {calculated_pi}")

plt.figure() 
plt.scatter(points_red_x,points_red_y, color='red', marker='.')
plt.scatter(points_blue_x, points_blue_y, color='blue', marker='.')
plt.title(f"Monte Carlo Approximation of Ï€ for n = {n} is {calculated_pi}")    
plt.savefig(f"monte_carlo_n_{n}.png")
plt.close()